<head>
<script src="https://cdn.tiny.cloud/1/chnbg906pb31lug0t386axhk5uiut5lj85fg21g1m38k1y2n/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
</head>
 <% render 'shared/errors', obj: @article %>
 <%= form_with(model: @article,class: "w-full",local: true) do |f| %>
<main class="flex flex-col h-screen">
  <div class="flex flex-1 overflow-x-auto">
      <div class="flex flex-1 flex-col">
        <div class="flex flex-1 justify-center bg-blue-50 shadow-sm overflow-y-auto paragraph px-4 bg-cover bg-center">
         
            <div class="mb-3 mt-8">
                    <%= f.text_field :title,class:"w-full p-2 text-sm border-gray-200 rounded-lg shadow-sm mb-5",placeholder:"Add a title here" %>
                <div class="">
                    <%= f.rich_text_area :content,class:"p-2 text-sm border-gray-200 bg-white rounded-lg shadow-sm customized-min-height",id: "editor1" %>
                </div>
            </div>
        </div>
      </div>
    <div class="flex flex-col bg-blue-50 border-l-2 shadow-sm border-gray-200 w-1/3 p-4">
       <div class="mb-3 mt-3 flex justify-between rounded-md border p-3">
            <div class="w-full">
                    <%= f.submit 'Publish',class: "px-4 py-2 rounded-md shadow text-sm font-medium  bg-green-400 w-full   text-white cursor-pointer" %>
            </div>
            <div class="ml-2 w-full">
                    <%= f.submit 'Save as Draft',class: "px-4 py-2 rounded-md shadow text-sm font-medium w-full  bg-orange-400   text-white cursor-pointer" %>
            </div>
            <div class="ml-2">
                      <%= link_to articles_path,class:"flex items-center justify-center px-4 py-2  rounded-md shadow text-sm font-medium  bg-indigo-500   text-white" do %>
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 inline" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />
                          </svg> <p class="ml-2"> Cancel </p>
                     <% end %>
            </div>          
        </div> 
              <div class="w-full">
                  <label class="mx-2 mb-2" for="Author">Author</label>
                              <input type="text" id="Author" class="w-full px-2 py-2  text-sm border-gray-200 rounded-lg shadow-sm" readonly="true"  value="<%= current_user.first_name %>" />
              </div>
              <div class="w-full">
                <%= f.label :banner,class: "mx-2 mb-2" %>
                  <%= f.file_field :banner,class: "block w-full px-3 py-2 text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 cursor-pointer dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400" %>
                </div>
              <div class="w-full mb-3">
                      <%= f.label :category,class: "mx-2 mb-2" %>
   		  	   	        <%= f.select :category,Category.all.map { |c| [c.definition] },{},{ :class=> "w-full px-2 py-2 text-sm border-gray-200 rounded-lg shadow-sm"} %>
              </div>
              <div class="w-full my-4 mb-3">
                      <%= f.label :sub_category,class: "mx-2 mb-2" %>
   		  	   	        <%= f.select :sub_category,SubCategory.all.map { |sc| [sc.definition] },{},{ :class=> "w-full px-2 py-2 text-sm border-gray-200 rounded-lg shadow-sm"} %>
              </div>
              <div class="w-full my-4 mb-3">
                      <%= f.label :tags,class: "mx-2" %>
   		  	   	        <%= f.text_field :tags,class: "w-full px-2 py-2 text-sm border-gray-200 rounded-lg shadow-sm",id: "tags-input",name: 'tags' %>
              </div>
              <div class="w-full mb-3">
                      <%= f.label :visibility,class: "mx-2 mb-3" %>
                      <%= f.select :visibility,Article.visibilities.keys,{},{class:"w-full px-5 py-2 text-sm border-gray-200 rounded-lg shadow-sm"} %>
              </div>
                <div class="w-full my-4 mb-3">
                       <%= f.label :version_note,class: "mx-2 mb-3" %>
                       <%= f.text_field :version_note,class: " px-2 py-2 text-sm border-gray-200 rounded-lg shadow-sm" %>
                </div>
   		</div>
      
  </div>
</main>
 <% end %>
</body>
  <script type="text/javascript">
var input = document.querySelector('input[name=tags]'),
    tagify = new Tagify(input, {
        pattern             : /^.{0,20}$/,  // Validate typed tag(s) by Regex. Here maximum chars length is defined as "20"
        delimiters          : ",| ",        // add new tags when a comma or a space character is entered
        keepInvalidTags     : true,         // do not remove invalid tags (but keep them marked as invalid)
        editTags            : {
            clicks: 2,              // single click to edit a tag
            keepInvalid: false      // if after editing, tag is invalid, auto-revert
        },
        maxTags             : 6,
        blacklist           : ["foo", "bar", "baz"],
        whitelist           : ["temple","stun","detective","sign","passion","routine","deck","discriminate","relaxation","fraud","attractive","soft","forecast","point","thank","stage","eliminate","effective","flood","passive","skilled","separation","contact","compromise","reality","district","nationalist","leg","porter","conviction","worker","vegetable","commerce","conception","particle","honor","stick","tail","pumpkin","core","mouse","egg","population","unique","behavior","onion","disaster","cute","pipe","sock","dialect","horse","swear","owner","cope","global","improvement","artist","shed","constant","bond","brink","shower","spot","inject","bowel","homosexual","trust","exclude","tough","sickness","prevalence","sister","resolution","cattle","cultural","innocent","burial","bundle","thaw","respectable","thirsty","exposure","team","creed","facade","calendar","filter","utter","dominate","predator","discover","theorist","hospitality","damage","woman","rub","crop","unpleasant","halt","inch","birthday","lack","throne","maximum","pause","digress","fossil","policy","instrument","trunk","frame","measure","hall","support","convenience","house","partnership","inspector","looting","ranch","asset","rally","explicit","leak","monarch","ethics","applied","aviation","dentist","great","ethnic","sodium","truth","constellation","lease","guide","break","conclusion","button","recording","horizon","council","paradox","bride","weigh","like","noble","transition","accumulation","arrow","stitch","academy","glimpse","case","researcher","constitutional","notion","bathroom","revolutionary","soldier","vehicle","betray","gear","pan","quarter","embarrassment","golf","shark","constitution","club","college","duty","eaux","know","collection","burst","fun","animal","expectation","persist","insure","tick","account","initiative","tourist","member","example","plant","river","ratio","view","coast","latest","invite","help","falsify","allocation","degree","feel","resort","means","excuse","injury","pupil","shaft","allow","ton","tube","dress","speaker","double","theater","opposed","holiday","screw","cutting","picture","laborer","conservation","kneel","miracle","brand","nomination","characteristic","referral","carbon","valley","hot","climb","wrestle","motorist","update","loot","mosquito","delivery","eagle","guideline","hurt","feedback","finish","traffic","competence","serve","archive","feeling","hope","seal","ear","oven","vote","ballot","study","negative","declaration","particular","pattern","suburb","intervention","brake","frequency","drink","affair","contemporary","prince","dry","mole","lazy","undermine","radio","legislation","circumstance","bear","left","pony","industry","mastermind","criticism","sheep","failure","chain","depressed","launch","script","green","weave","please","surprise","doctor","revive","banquet","belong","correction","door","image","integrity","intermediate","sense","formal","cane","gloom","toast","pension","exception","prey","random","nose","predict","needle","satisfaction","establish","fit","vigorous","urgency","X-ray","equinox","variety","proclaim","conceive","bulb","vegetarian","available","stake","publicity","strikebreaker","portrait","sink","frog","ruin","studio","match","electron","captain","channel","navy","set","recommend","appoint","liberal","missile","sample","result","poor","efflux","glance","timetable","advertise","personality","aunt","dog"],
        transformTag        : transformTag,
        backspace           : "edit",
        placeholder         : "Type something",
        dropdown : {
            enabled: 1,            // show suggestion after 1 typed character
            fuzzySearch: false,    // match only suggestions that starts with the typed characters
            position: 'text',      // position suggestions list next to typed text
            caseSensitive: true,   // allow adding duplicate items if their case is different
        },
        templates: {
            dropdownItemNoMatch: function(data) {
                return `<div class='${this.settings.classNames.dropdownItem}' tabindex="0" role="option">
                    No suggestion found for: <strong>${data.value}</strong>
                </div>`
            }
        }
    })

// generate a random color (in HSL format, which I like to use)
function getRandomColor(){
    function rand(min, max) {
        return min + Math.random() * (max - min);
    }

    var h = rand(1, 360)|0,
        s = rand(40, 70)|0,
        l = rand(65, 72)|0;

    return 'hsl(' + h + ',' + s + '%,' + l + '%)';
}

function transformTag( tagData ){
    tagData.color = getRandomColor();
    tagData.style = "--tag-bg:" + tagData.color;

    if( tagData.value.toLowerCase() == 'shit' )
        tagData.value = 's✲✲t'
}

tagify.on('add', function(e){
    console.log(e.detail)
})

tagify.on('invalid', function(e){
    console.log(e, e.detail);
})

var clickDebounce;

tagify.on('click', function(e){
    const {tag:tagElm, data:tagData} = e.detail;

    // a delay is needed to distinguish between regular click and double-click.
    // this allows enough time for a possible double-click, and noly fires if such
    // did not occur.
    clearTimeout(clickDebounce);
    clickDebounce = setTimeout(() => {
        tagData.color = getRandomColor();
        tagData.style = "--tag-bg:" + tagData.color;
        tagify.replaceTag(tagElm, tagData);
    }, 200);
})

tagify.on('dblclick', function(e){
    // when souble clicking, do not change the color of the tag
    clearTimeout(clickDebounce);
})
  </script>
